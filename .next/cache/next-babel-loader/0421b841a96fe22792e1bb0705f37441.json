{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport pdfjsLib from 'pdfjs-dist/webpack';\n\nvar launchGuidePDF = /*#__PURE__*/function (_Component) {\n  _inherits(launchGuidePDF, _Component);\n\n  var _super = _createSuper(launchGuidePDF);\n\n  function launchGuidePDF() {\n    _classCallCheck(this, launchGuidePDF);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(launchGuidePDF, [{\n    key: \"render\",\n    value: function render() {\n      var myState = {\n        pdf: null,\n        currentPage: 1,\n        zoom: 1\n      };\n      pdfjsLib.getDocument('./LaunchGuide.pdf').then(function (pdf) {\n        myState.pdf = pdf;\n        render();\n      });\n\n      function render() {\n        myState.pdf.getPage(myState.currentPage).then(function (page) {\n          var canvas = document.getElementById(\"pdf_renderer\");\n          var ctx = canvas.getContext('2d');\n          var viewport = page.getViewport(myState.zoom);\n          canvas.width = viewport.width;\n          canvas.height = viewport.height;\n          page.render({\n            canvasContext: ctx,\n            viewport: viewport\n          });\n        });\n      } // Go previous button\n\n\n      function prevButton(e) {\n        if (myState.pdf == null || myState.currentPage == 1) return;\n        myState.currentPage -= 1;\n        document.getElementById(\"current_page\").value = myState.currentPage;\n        render();\n      }\n\n      ;\n\n      function nextButton(e) {\n        if (myState.pdf == null || myState.currentPage == myState.pdf._pdfInfo.numPages) {\n          return;\n        } else {\n          myState.currentPage += 1;\n          document.getElementById(\"current_page\").value = myState.currentPage;\n          render();\n        }\n      } // Zoom Functionality\n\n\n      function zoomIn() {\n        if (myState.pdf == null) return;\n        myState.zoom += 0.5;\n        render();\n      }\n\n      ;\n\n      function zoomOut() {\n        if (myState.pdf == null) return;\n        myState.zoom -= 0.5;\n        render();\n      }\n\n      ;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        id: \"navigation_controls\",\n        style: \"text-align: center;\"\n      }, __jsx(\"button\", {\n        id: \"go_previous\",\n        onclick: prevButton()\n      }, \"Previous\"), __jsx(\"input\", {\n        id: \"current_page\",\n        value: \"1\",\n        type: \"number\"\n      }), __jsx(\"button\", {\n        id: \"go_next\",\n        onclick: nextButton()\n      }, \"Next\")), __jsx(\"div\", {\n        id: \"my_pdf_viewer\"\n      }, __jsx(\"div\", {\n        id: \"canvas_container\"\n      }, __jsx(\"canvas\", {\n        id: \"pdf_renderer\"\n      }))), __jsx(\"div\", {\n        id: \"zoom_controls\",\n        style: \"text-align: center;\"\n      }, __jsx(\"button\", {\n        id: \"zoom_in\",\n        onclick: zoomIn()\n      }, \"+\"), __jsx(\"button\", {\n        id: \"zoom_out\",\n        onclick: zoomOut()\n      }, \"-\"), __jsx(\"p\", {\n        style: \"font-size: small; font-family: Arial, Helvetica, sans-serif;\"\n      }, \"Zoom\")));\n    }\n  }]);\n\n  return launchGuidePDF;\n}(Component);\n\nexport { launchGuidePDF as default };","map":{"version":3,"sources":["/Users/ashleyfulks/code/prelaunchassessment/pages/launchGuidePDF.js"],"names":["React","Component","pdfjsLib","launchGuidePDF","myState","pdf","currentPage","zoom","getDocument","then","render","getPage","page","canvas","document","getElementById","ctx","getContext","viewport","getViewport","width","height","canvasContext","prevButton","e","value","nextButton","_pdfInfo","numPages","zoomIn","zoomOut"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport pdfjsLib from 'pdfjs-dist/webpack';\n\nexport default class launchGuidePDF extends Component {\n    render() {\n        var myState = {\n            pdf: null,\n            currentPage: 1,\n            zoom: 1\n        }\n     \n        pdfjsLib.getDocument('./LaunchGuide.pdf').then((pdf) => {\n     \n            myState.pdf = pdf;\n            render();\n    \n        });\n        function render() {\n            myState.pdf.getPage(myState.currentPage).then((page) => {\n                var canvas = document.getElementById(\"pdf_renderer\");\n                var ctx = canvas.getContext('2d');\n                \n                var viewport = page.getViewport(myState.zoom);\n                canvas.width = viewport.width;\n                canvas.height = viewport.height;\n                page.render({\n                    canvasContext: ctx,\n                    viewport: viewport\n                });\n        \n            });\n        }\n    \n        // Go previous button\n        function prevButton(e) {\n                    if(myState.pdf == null || myState.currentPage == 1) return;\n                    myState.currentPage -= 1;\n                    document.getElementById(\"current_page\").value = myState.currentPage;\n                    render();\n                };\n        \n        function nextButton(e) {\n                    if(myState.pdf == null || myState.currentPage == myState.pdf._pdfInfo.numPages) {\n                    return;\n                    } else {\n                    myState.currentPage += 1;\n                    document.getElementById(\"current_page\").value = myState.currentPage;\n                    render();\n                    }\n        }\n        // Zoom Functionality\n        function zoomIn() {\n                    if(myState.pdf == null) return;\n                    myState.zoom += 0.5;\n                    render();\n                };\n        \n        function zoomOut() {\n                    if(myState.pdf == null) return;\n                    myState.zoom -= 0.5;\n                    render();\n                };\n        return (\n            <React.Fragment>\n                <div id=\"navigation_controls\" style=\"text-align: center;\">\n                    <button id=\"go_previous\" onclick={prevButton()}>Previous</button>\n                    <input id=\"current_page\" value=\"1\" type=\"number\"/>\n                    <button id=\"go_next\" onclick={nextButton()}>Next</button>\n                </div>\n                <div id=\"my_pdf_viewer\">\n                    <div id=\"canvas_container\">\n                        <canvas id=\"pdf_renderer\"></canvas>\n                    </div>\n                </div>\n                <div id=\"zoom_controls\" style=\"text-align: center;\"> \n                    <button id=\"zoom_in\" onclick={zoomIn()}>+</button>\n                    <button id=\"zoom_out\" onclick={zoomOut()}>-</button>\n                    <p style=\"font-size: small; font-family: Arial, Helvetica, sans-serif;\">Zoom</p>\n                </div>\n        </React.Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}