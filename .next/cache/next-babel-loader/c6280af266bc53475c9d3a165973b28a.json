{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Button, RadioButton, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle, Heading, Subheading } from '@shopify/polaris';\nimport React from 'react';\nimport { AppProvider, ContextualSaveBar, Frame } from '@shopify/polaris';\n\nvar stakeholders = /*#__PURE__*/function (_React$Component) {\n  _inherits(stakeholders, _React$Component);\n\n  var _super = _createSuper(stakeholders);\n\n  function stakeholders() {\n    _classCallCheck(this, stakeholders);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(stakeholders, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"page\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(\"br\", null), __jsx(FormLayout, null, __jsx(\"p\", null, \"Who are the main business stakeholders in this project and what are their roles?\"), __jsx(TextField, {\n        label: \"Stakeholder Name\"\n      }), __jsx(TextField, {\n        label: \"Company\"\n      }), __jsx(TextField, {\n        label: \"Email\"\n      }), __jsx(TextField, {\n        label: \"Job Title\"\n      }), __jsx(TextField, {\n        label: \"Project Role\"\n      }), __jsx(TextField, {\n        label: \"Region\"\n      }), __jsx(TextField, {\n        label: \"Timezone\"\n      }), __jsx(TextField, {\n        label: \"Main Point of Contact (POC) and should be looped into all communications\"\n      }), __jsx(TextField, {\n        label: \"Any additional information we should know about your role in the project or the company?\"\n      }), __jsx(Button, {\n        primary: true\n      }, \"Save Stakeholder\"), __jsx(\"p\", null, \"Do you have an agency partner for launch?\"), __jsx(Stack, {\n        vertical: true\n      }, __jsx(RadioButton, {\n        label: \"Yes\",\n        id: \"disabled\",\n        name: \"accounts\"\n      }), __jsx(RadioButton, {\n        label: \"No\",\n        id: \"optional\",\n        name: \"accounts\"\n      }))))));\n    }\n  }]);\n\n  return stakeholders;\n}(React.Component);\n\nexport { stakeholders as default };","map":null,"metadata":{},"sourceType":"module"}