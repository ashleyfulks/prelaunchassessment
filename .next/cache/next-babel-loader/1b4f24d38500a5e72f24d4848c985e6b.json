{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nexport default class launchGuidePDF extends Component {\n  render() {\n    var myState = {\n      pdf: null,\n      currentPage: 1,\n      zoom: 1\n    };\n    pdfjsLib.getDocument('./LaunchGuide.pdf').then(pdf => {\n      myState.pdf = pdf;\n      render();\n    });\n\n    function render() {\n      myState.pdf.getPage(myState.currentPage).then(page => {\n        var canvas = document.getElementById(\"pdf_renderer\");\n        var ctx = canvas.getContext('2d');\n        var viewport = page.getViewport(myState.zoom);\n        canvas.width = viewport.width;\n        canvas.height = viewport.height;\n        page.render({\n          canvasContext: ctx,\n          viewport: viewport\n        });\n      });\n    } // Go previous button\n\n\n    function prevButton(e) {\n      if (myState.pdf == null || myState.currentPage == 1) return;\n      myState.currentPage -= 1;\n      document.getElementById(\"current_page\").value = myState.currentPage;\n      render();\n    }\n\n    ;\n\n    function nextButton(e) {\n      if (myState.pdf == null || myState.currentPage == myState.pdf._pdfInfo.numPages) {\n        return;\n      } else {\n        myState.currentPage += 1;\n        document.getElementById(\"current_page\").value = myState.currentPage;\n        render();\n      }\n    } // Zoom Functionality\n\n\n    function zoomIn() {\n      if (myState.pdf == null) return;\n      myState.zoom += 0.5;\n      render();\n    }\n\n    ;\n\n    function zoomOut() {\n      if (myState.pdf == null) return;\n      myState.zoom -= 0.5;\n      render();\n    }\n\n    ;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      id: \"navigation_controls\",\n      style: \"text-align: center;\"\n    }, __jsx(\"button\", {\n      id: \"go_previous\",\n      onclick: prevButton()\n    }, \"Previous\"), __jsx(\"input\", {\n      id: \"current_page\",\n      value: \"1\",\n      type: \"number\"\n    }), __jsx(\"button\", {\n      id: \"go_next\",\n      onclick: nextButton()\n    }, \"Next\")), __jsx(\"div\", {\n      id: \"my_pdf_viewer\"\n    }, __jsx(\"div\", {\n      id: \"canvas_container\"\n    }, __jsx(\"canvas\", {\n      id: \"pdf_renderer\"\n    }))), __jsx(\"div\", {\n      id: \"zoom_controls\",\n      style: \"text-align: center;\"\n    }, __jsx(\"button\", {\n      id: \"zoom_in\",\n      onclick: zoomIn()\n    }, \"+\"), __jsx(\"button\", {\n      id: \"zoom_out\",\n      onclick: zoomOut()\n    }, \"-\"), __jsx(\"p\", {\n      style: \"font-size: small; font-family: Arial, Helvetica, sans-serif;\"\n    }, \"Zoom\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashleyfulks/code/prelaunchassessment/pages/launchGuidePDF.js"],"names":["React","Component","launchGuidePDF","render","myState","pdf","currentPage","zoom","pdfjsLib","getDocument","then","getPage","page","canvas","document","getElementById","ctx","getContext","viewport","getViewport","width","height","canvasContext","prevButton","e","value","nextButton","_pdfInfo","numPages","zoomIn","zoomOut"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class launchGuidePDF extends Component {\n    render() {\n        var myState = {\n            pdf: null,\n            currentPage: 1,\n            zoom: 1\n        }\n     \n        pdfjsLib.getDocument('./LaunchGuide.pdf').then((pdf) => {\n     \n            myState.pdf = pdf;\n            render();\n    \n        });\n        function render() {\n            myState.pdf.getPage(myState.currentPage).then((page) => {\n                var canvas = document.getElementById(\"pdf_renderer\");\n                var ctx = canvas.getContext('2d');\n                \n                var viewport = page.getViewport(myState.zoom);\n                canvas.width = viewport.width;\n                canvas.height = viewport.height;\n                page.render({\n                    canvasContext: ctx,\n                    viewport: viewport\n                });\n        \n            });\n        }\n    \n        // Go previous button\n        function prevButton(e) {\n                    if(myState.pdf == null || myState.currentPage == 1) return;\n                    myState.currentPage -= 1;\n                    document.getElementById(\"current_page\").value = myState.currentPage;\n                    render();\n                };\n        \n        function nextButton(e) {\n                    if(myState.pdf == null || myState.currentPage == myState.pdf._pdfInfo.numPages) {\n                    return;\n                    } else {\n                    myState.currentPage += 1;\n                    document.getElementById(\"current_page\").value = myState.currentPage;\n                    render();\n                    }\n        }\n        // Zoom Functionality\n        function zoomIn() {\n                    if(myState.pdf == null) return;\n                    myState.zoom += 0.5;\n                    render();\n                };\n        \n        function zoomOut() {\n                    if(myState.pdf == null) return;\n                    myState.zoom -= 0.5;\n                    render();\n                };\n        return (\n            <React.Fragment>\n                <div id=\"navigation_controls\" style=\"text-align: center;\">\n                    <button id=\"go_previous\" onclick={prevButton()}>Previous</button>\n                    <input id=\"current_page\" value=\"1\" type=\"number\"/>\n                    <button id=\"go_next\" onclick={nextButton()}>Next</button>\n                </div>\n                <div id=\"my_pdf_viewer\">\n                    <div id=\"canvas_container\">\n                        <canvas id=\"pdf_renderer\"></canvas>\n                    </div>\n                </div>\n                <div id=\"zoom_controls\" style=\"text-align: center;\"> \n                    <button id=\"zoom_in\" onclick={zoomIn()}>+</button>\n                    <button id=\"zoom_out\" onclick={zoomOut()}>-</button>\n                    <p style=\"font-size: small; font-family: Arial, Helvetica, sans-serif;\">Zoom</p>\n                </div>\n        </React.Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}